-- N8N Analytics and Marketing Schema for Supabase
-- This is PostgreSQL compatible

-- Table for storing book recommendations generated by N8N workflows
CREATE TABLE book_recommendations (
  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  book_id UUID REFERENCES books(id) ON DELETE CASCADE,
  category TEXT,
  author TEXT,
  tags TEXT[],
  boost_score DECIMAL DEFAULT 1.0,
  marketing_campaign_active BOOLEAN DEFAULT FALSE,
  campaign_start_date TIMESTAMPTZ,
  generated_content JSONB,
  created_at TIMESTAMPTZ DEFAULT NOW(),
  updated_at TIMESTAMPTZ DEFAULT NOW()
);

-- Table for revenue analytics processed by N8N
CREATE TABLE revenue_analytics (
  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  payment_id TEXT UNIQUE,
  book_id UUID REFERENCES books(id),
  user_id UUID,
  gross_amount DECIMAL,
  platform_fee DECIMAL,
  stripe_fee DECIMAL,
  publisher_royalty DECIMAL,
  author_royalty DECIMAL,
  net_revenue DECIMAL,
  currency TEXT DEFAULT 'mmk',
  processed_at TIMESTAMPTZ,
  status TEXT DEFAULT 'calculated',
  metadata JSONB,
  created_at TIMESTAMPTZ DEFAULT NOW()
);

-- Table for daily analytics summaries
CREATE TABLE daily_analytics (
  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  report_date DATE UNIQUE,
  total_sales DECIMAL DEFAULT 0,
  total_transactions INTEGER DEFAULT 0,
  platform_revenue DECIMAL DEFAULT 0,
  stripe_costs DECIMAL DEFAULT 0,
  publisher_payouts DECIMAL DEFAULT 0,
  author_payouts DECIMAL DEFAULT 0,
  net_profit DECIMAL DEFAULT 0,
  top_selling_books JSONB,
  currency TEXT DEFAULT 'mmk',
  updated_at TIMESTAMPTZ DEFAULT NOW()
);

-- Table for marketing campaigns generated by N8N
CREATE TABLE marketing_campaigns (
  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  book_id UUID REFERENCES books(id) ON DELETE CASCADE,
  campaign_type TEXT NOT NULL,
  ai_generated_content JSONB NOT NULL,
  status TEXT DEFAULT 'active',
  platforms TEXT[],
  target_audience JSONB,
  performance_metrics JSONB,
  scheduled_posts JSONB,
  created_by TEXT DEFAULT 'n8n_automation',
  created_at TIMESTAMPTZ DEFAULT NOW(),
  updated_at TIMESTAMPTZ DEFAULT NOW()
);

-- Table for tracking N8N workflow executions
CREATE TABLE n8n_workflow_logs (
  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  workflow_name TEXT NOT NULL,
  workflow_id TEXT,
  execution_id TEXT,
  trigger_data JSONB,
  status TEXT DEFAULT 'running',
  execution_time_ms INTEGER,
  error_message TEXT,
  output_data JSONB,
  created_at TIMESTAMPTZ DEFAULT NOW()
);

-- Table for email marketing subscriber data
CREATE TABLE email_subscribers (
  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  email TEXT UNIQUE NOT NULL,
  name TEXT,
  subscribed BOOLEAN DEFAULT TRUE,
  preferences JSONB,
  source TEXT DEFAULT 'website',
  tags TEXT[],
  last_engagement TIMESTAMPTZ,
  created_at TIMESTAMPTZ DEFAULT NOW(),
  updated_at TIMESTAMPTZ DEFAULT NOW()
);

-- Indexes for performance
CREATE INDEX idx_revenue_analytics_book_id ON revenue_analytics(book_id);
CREATE INDEX idx_revenue_analytics_processed_at ON revenue_analytics(processed_at);
CREATE INDEX idx_revenue_analytics_payment_id ON revenue_analytics(payment_id);

CREATE INDEX idx_book_recommendations_book_id ON book_recommendations(book_id);
CREATE INDEX idx_book_recommendations_campaign_active ON book_recommendations(marketing_campaign_active);

CREATE INDEX idx_marketing_campaigns_book_id ON marketing_campaigns(book_id);
CREATE INDEX idx_marketing_campaigns_status ON marketing_campaigns(status);
CREATE INDEX idx_marketing_campaigns_created_at ON marketing_campaigns(created_at);

CREATE INDEX idx_daily_analytics_report_date ON daily_analytics(report_date);

CREATE INDEX idx_n8n_workflow_logs_workflow_name ON n8n_workflow_logs(workflow_name);
CREATE INDEX idx_n8n_workflow_logs_status ON n8n_workflow_logs(status);
CREATE INDEX idx_n8n_workflow_logs_created_at ON n8n_workflow_logs(created_at);

CREATE INDEX idx_email_subscribers_email ON email_subscribers(email);
CREATE INDEX idx_email_subscribers_subscribed ON email_subscribers(subscribed);