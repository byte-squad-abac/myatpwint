{
  "nodes": [
    {
      "parameters": {
        "method": "POST",
        "url": "https://openrouter.ai/api/v1/chat/completions",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "openRouterApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer $OPENROUTER_API_KEY"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ \n  {\n    model: \"google/gemini-2.5-flash-image-preview\",\n    messages: [\n      {\n        role: \"user\",\n        content: [\n          {\n            type: \"text\",\n            // Pull ‚ÄúImage Prompt‚Äù from the generator node.\n            // Fallbacks included so it never becomes undefined.\n            text:\n              $('Image Prompt Generator1').item.json?.output?.['Image Prompt']\n              ?? $json.output?.['Image Prompt']\n              ?? \"\"\n          }\n        ]\n      }\n    ]\n  }\n}}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1632,
        400
      ],
      "id": "56e929ef-ccfe-415e-8ed1-f07d29872e49",
      "name": "Nano üçå1",
      "retryOnFail": true,
      "maxTries": 5,
      "credentials": {
        "openRouterApi": {
          "id": "fSxLAHna6Zyogf88",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "operation": "sendAndWait",
        "sendTo": "=luphonemaw2004@gmail.com",
        "subject": "=Approval for {{ $('Merge2').item.json.body.title }} Post\n",
        "message": "=<!DOCTYPE html>\n<html lang=\"en\" xmlns:v=\"urn:schemas-microsoft-com:vml\" xmlns:o=\"urn:schemas-microsoft-com:office:office\">\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width\">\n  <meta name=\"x-apple-disable-message-reformatting\">\n  <meta name=\"color-scheme\" content=\"light\">\n  <meta name=\"supported-color-schemes\" content=\"light\">\n  <title>Social Media Content</title>\n  <!--[if mso]>\n  <noscript><xml><o:OfficeDocumentSettings><o:PixelsPerInch>96</o:PixelsPerInch></o:OfficeDocumentSettings></xml></noscript>\n  <![endif]-->\n  <style>\n    html,body{margin:0!important;padding:0!important;height:100%!important;width:100%!important}\n    *{-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}\n    table,td{mso-table-lspace:0pt!important;mso-table-rspace:0pt!important}\n    img{-ms-interpolation-mode:bicubic;border:0;outline:none;text-decoration:none;display:block}\n    .bg{background:#f3f6fb}\n    .container{width:100%;max-width:860px;margin:0 auto}\n    .card{background:#ffffff;border-radius:16px;box-shadow:0 10px 30px rgba(0,0,0,.08)}\n    .pad-outer{padding:24px}\n    .pad-inner{padding:10px 16px}\n    .title{font:700 22px/1.3 Segoe UI,Roboto,Arial,sans-serif;color:#0d47a1;margin:0;text-align:center}\n    .h{font:600 14px/1.3 Segoe UI,Roboto,Arial,sans-serif;color:#0d47a1;margin:0 0 6px}\n    .p{font:400 14px/1.7 Segoe UI,Roboto,Arial,sans-serif;color:#444;margin:0}\n    .pre{white-space:pre-wrap}\n    .section{background:#f5f9ff;border-radius:12px;border-left:6px solid #0d47a1}\n    .divider{height:1px;background:#e6ecf6;margin:16px 0}\n    .img-wrap{padding-top:6px;border-top:1px dashed #cbd5e1;text-align:center}\n    .note{font:12px/1.6 Segoe UI,Roboto,Arial,sans-serif;color:#6b7280;text-align:center;padding:10px 16px}\n    @media (max-width:520px){.pad-outer{padding:16px}.title{font-size:20px}}\n  </style>\n</head>\n<body class=\"bg\">\n  <!-- preview text (hidden) -->\n  <div style=\"display:none;max-height:0;overflow:hidden;opacity:0;\">\n    Your generated captions, email copy, and image preview are ready.\n  </div>\n\n  <table role=\"presentation\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\" class=\"bg\">\n    <tr>\n      <td align=\"center\" class=\"pad-outer\">\n        <table role=\"presentation\" cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\" class=\"container card\">\n          <tr>\n            <td style=\"padding:28px 24px 8px 24px;\">\n              <h1 class=\"title\">‚ú® Social Media Content ‚ú®</h1>\n            </td>\n          </tr>\n\n          <!-- Facebook -->\n          <tr>\n            <td class=\"pad-outer\">\n              <table role=\"presentation\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" class=\"section\">\n                <tr><td class=\"pad-inner\">\n                  <div class=\"h\">Facebook Caption</div>\n                  <div class=\"p\">{{ $('Merge3').item.json.output.facebook_caption }}</div>\n                </td></tr>\n              </table>\n            </td>\n          </tr>\n\n          <!-- Instagram -->\n          <tr>\n            <td class=\"pad-outer\">\n              <table role=\"presentation\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" class=\"section\">\n                <tr><td class=\"pad-inner\">\n                  <div class=\"h\">Instagram Caption</div>\n                  <div class=\"p\">{{ $('Merge3').item.json.output.instagram_caption }}</div>\n                </td></tr>\n              </table>\n            </td>\n          </tr>\n\n          <!-- Telegram -->\n          <tr>\n            <td class=\"pad-outer\">\n              <table role=\"presentation\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" class=\"section\">\n                <tr><td class=\"pad-inner\">\n                  <div class=\"h\">Telegram Message</div>\n                  <div class=\"p pre\">{{ $('Merge3').item.json.output.telegram_message }}</div>\n                </td></tr>\n              </table>\n            </td>\n          </tr>\n\n          <!-- Gmail preview -->\n          <tr><td class=\"pad-outer\"><div class=\"divider\"></div></td></tr>\n\n          <tr>\n            <td class=\"pad-outer\">\n              <table role=\"presentation\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" class=\"section\">\n                <tr><td class=\"pad-inner\">\n                  <div class=\"h\">Gmail ‚Äî Subject</div>\n                  <div class=\"p\">{{ $('Merge3').item.json.output.gmail_subject }}</div>\n                </td></tr>\n              </table>\n            </td>\n          </tr>\n\n          <tr>\n            <td class=\"pad-outer\">\n              <table role=\"presentation\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" class=\"section\">\n                <tr><td class=\"pad-inner\">\n                  <div class=\"h\">Gmail ‚Äî Body (Plain-text Preview)</div>\n                  <div class=\"p\">{{ $('Merge3').item.json.output.gmail_text }}</div>\n                </td></tr>\n              </table>\n            </td>\n          </tr>\n\n          <tr>\n            <td class=\"pad-outer\">\n              <table role=\"presentation\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" class=\"section\">\n                <tr><td class=\"pad-inner\">\n                  <div class=\"h\">Gmail ‚Äî Body (HTML Preview)</div>\n                  <div class=\"p\">{{ $('Merge3').item.json.output.gmail_html }}</div>\n                </td></tr>\n              </table>\n            </td>\n          </tr>\n\n          <!-- Image -->\n          <tr>\n            <td class=\"pad-outer\">\n              <table role=\"presentation\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" class=\"section\">\n                <tr><td class=\"pad-inner\">\n                  <div class=\"h\">Generated Image</div>\n                  <div class=\"img-wrap\">\n                    <img alt=\"Generated Image\" width=\"100%\" style=\"max-width:100%;border-radius:12px;height:auto\"\n                      src=\"{{ $json.image_url\n                            || $('Edit Fields7').item.json?.image_url\n                            || $('Edit Fields6').item.json?.image_url\n                            || $('Load Image1').item.json?.image_url\n                            || '' }}\">\n                  </div>\n                </td></tr>\n              </table>\n            </td>\n          </tr>\n\n          <!-- Note pointing to Gmail's form button -->\n          <tr>\n            <td class=\"note\">\n              Use the <strong>Review &amp; Respond</strong> button in this email to approve or request changes.\n            </td>\n          </tr>\n\n        </table>\n      </td>\n    </tr>\n  </table>\n</body>\n</html>\n",
        "responseType": "customForm",
        "formFields": {
          "values": [
            {
              "fieldLabel": "What do you want to do?",
              "fieldType": "radio",
              "fieldOptions": {
                "values": [
                  {
                    "option": "Approve"
                  },
                  {
                    "option": "Regenerate"
                  }
                ]
              },
              "requiredField": true
            },
            {
              "fieldLabel": "Feedback",
              "fieldType": "textarea",
              "placeholder": "Be specific: tone, length, keywords, CTA‚Ä¶"
            },
            {
              "fieldLabel": "Change image too",
              "fieldType": "checkbox",
              "fieldOptions": {
                "values": [
                  {
                    "option": "Change image too"
                  }
                ]
              }
            },
            {
              "fieldName": "content_id",
              "fieldType": "hiddenField",
              "fieldValue": "={{$('Edit Fields5').item.json.content_id}}"
            }
          ]
        },
        "options": {
          "messageButtonLabel": "Review & Respond",
          "responseFormTitle": "Approve or Regenerate",
          "responseFormDescription": "Approve to publish, or choose Regenerate and leave feedback.",
          "responseFormButtonLabel": "Submit Decision"
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        624,
        400
      ],
      "id": "7f597b64-649f-4b90-856a-9f49a8fc31d5",
      "name": "Send a message1",
      "webhookId": "cd7468d8-a844-48e5-80a0-2aaa38a24907",
      "retryOnFail": true,
      "credentials": {
        "gmailOAuth2": {
          "id": "drIPfTPaVGPanw05",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.decision }}",
                    "rightValue": "Approve",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "36244d46-7d7f-4fd2-9023-bfac55d6fc13"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Approve"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "7b03acd8-46d3-44a6-a7e2-479b392a3b63",
                    "leftValue": "={{ $json.decision }}",
                    "rightValue": "Regenerate",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Regenerate"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1072,
        480
      ],
      "id": "20b3c1ef-ebd5-4581-8e10-ec0878973c8c",
      "name": "Switch1"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -3328,
        432
      ],
      "id": "de6486d2-c9dd-4b43-bbc7-771623a87396",
      "name": "Wait1",
      "webhookId": "174efe1b-258b-4112-ac91-32b682600e6a"
    },
    {
      "parameters": {
        "text": "=You are creating marketing images for Myat Pwint Book Publishing House from Myanmar.\n\nBook Details:\nTitle:{{ $('Merge2').item.json.body.title }}\nAuthor: {{ $('Merge2').item.json.body.author }}\nCategories: {{ $('Merge2').item.json.body.categories }}\nDescription: {{ $('Merge2').item.json.body.description }}\nPrice: ${{ $('Merge2').item.json.body.price }}\n\nCreate a compelling marketing image prompt that:\n- Reflects Myanmar culture and aesthetic\n- Appeals to Myanmar book readers\n- Works well for social media promotion (Instagram, Facebook)\n- Incorporates the book's genre and theme\n- Can include Myanmar architectural elements, traditional colors, or cultural symbols when appropriate\n- Should be visually striking and professional for a publishing house\n\nGenerate the perfect image prompt for this book promotion.\n",
        "attributes": {
          "attributes": [
            {
              "name": "Image Prompt",
              "description": "Prompt of the Image. Perfect for google/gemini-2.5-flash-image-preview:free model.\nEscape all double quotes inside a JSON string with a backslash (like this: \\\")",
              "required": true
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1.2,
      "position": [
        -1984,
        400
      ],
      "id": "9e546e28-e762-422b-a314-5a47e34c9c15",
      "name": "Image Prompt Generator1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.prompt_for_ai }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=You are \"SocialCopyAgent\" for Myat Pwint Book Publishing House from Myanmar. Create viral social media content for book promotion.\n\nInput: Book data (title, author, genre, tags, price, description)\nOutput: JSON ONLY - no extra text\n\nCreate engaging social media content for Myanmar audience that makes people want to buy this book immediately.\n\nPlatforms: Instagram, Facebook, Telegram group, Gmail newsletter\n\nMake it viral-worthy!\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        0,
        0
      ],
      "id": "0ff32c7c-3757-4627-ac5c-c9ce85cff754",
      "name": "AI Agent1",
      "retryOnFail": true,
      "maxTries": 5
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "={\n  \"type\": \"object\",\n  \"properties\": {\n    \"instagram_caption\": { \"type\": \"string\", \"maxLength\": 2200 },\n    \"facebook_caption\":  { \"type\": \"string\", \"maxLength\": 3000 },\n    \"telegram_message\":  { \"type\": \"string\", \"maxLength\": 4096 },\n    \"gmail_subject\":     { \"type\": \"string\", \"maxLength\": 78 },\n    \"gmail_html\":        { \"type\": \"string\", \"maxLength\": 6000 },\n    \"gmail_text\":        { \"type\": \"string\", \"maxLength\": 6000 }\n  },\n  \"required\": [\n    \"instagram_caption\",\n    \"facebook_caption\",\n    \"telegram_message\",\n    \"gmail_subject\",\n    \"gmail_html\",\n    \"gmail_text\"\n  ],\n  \"additionalProperties\": false\n}\n"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        192,
        224
      ],
      "id": "97d8861d-7ede-4ecf-b34e-1d006d938176",
      "name": "Structured Output Parser1"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $execution.id }}",
        "tableName": "n8n_chat_memory"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        64,
        224
      ],
      "id": "acdc0ed7-ad35-449b-a5b8-17097cb3e510",
      "name": "Postgres Chat Memory1",
      "credentials": {
        "postgres": {
          "id": "SUEhuYJcerqDTg5F",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "baa2f072-ac28-4452-ac33-58ee83d1d825",
              "name": "prompt_for_ai",
              "value": "={{ $json.Feedback ? $json.Feedback : 'Here is the data for the book that you will be marketing: Title: \"' + $json.body.title + '\", Author: ' + $json.body.author + ', Genre: ' + (($json.body.categories || []).join(', ')) + ', Tags: ' + (($json.body.tags || []).join(', ')) + ', Price: $' + $json.body.price + ', Description: ' + $json.body.description }}\n",
              "type": "string"
            },
            {
              "id": "8a22ae92-cf7b-49ef-9461-1bd357eb72d9",
              "name": "content_id",
              "value": "={{ ($json.content_id || '').trim() || ($json.body?.book_id || '').trim() }}\n",
              "type": "string"
            },
            {
              "id": "95488740-12ff-4e15-867c-0fc4021c2d2c",
              "name": "update_image",
              "value": "={{ typeof $json.update_image === 'string'\n    && $json.update_image.trim() === '[\"Change image too\"]' }}",
              "type": "boolean"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3104,
        352
      ],
      "id": "7659a18c-92b2-4ab2-8563-1d1593664710",
      "name": "Edit Fields5"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "content_images",
          "mode": "list",
          "cachedResultName": "content_images"
        },
        "limit": 1,
        "where": {
          "values": [
            {
              "column": "content_id",
              "value": "={{ $('Edit Fields5').item.json.content_id }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -2880,
        592
      ],
      "id": "d8de8acb-6bf1-4708-ae64-b9962719b1e1",
      "name": "Load Image1",
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "SUEhuYJcerqDTg5F",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.should_update }}",
                    "rightValue": "true",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    },
                    "id": "b56f3663-3e51-41a7-99b1-a6aa34efbbb0"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Update"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b391ca32-05a8-434b-916d-f8ea8f78ab23",
                    "leftValue": "={{ $json.has_stored_image }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "UseStored"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b6dc50c3-f705-443c-a62a-7a69935e8c62",
                    "leftValue": "={{ $json.should_generate }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Generate"
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {
          "allMatchingOutputs": false
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -2208,
        480
      ],
      "id": "0288edbb-3bc6-4e17-945a-bb14ce1f7a8c",
      "name": "Should Update Image?1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "19db5d44-1ca4-4870-b39b-df6d0a624912",
              "name": "image_url",
              "value": "={{ (($items(\"Load Image1\")[0]?.json?.image_url) || '').trim() }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        48,
        592
      ],
      "id": "290912ec-79f3-4aba-b93f-addb688c40d6",
      "name": "Edit Fields6"
    },
    {
      "parameters": {
        "operation": "upsert",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "content_images",
          "mode": "list",
          "cachedResultName": "content_images"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "content_id": "={{ $('Edit Fields5').item.json.content_id }}",
            "image_url": "={{ $('Make Public URL1').item.json.image_url }}\n"
          },
          "matchingColumns": [
            "content_id"
          ],
          "schema": [
            {
              "id": "content_id",
              "displayName": "content_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "image_url",
              "displayName": "image_url",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": false
            },
            {
              "id": "updated_at",
              "displayName": "updated_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -288,
        400
      ],
      "id": "698ef517-b66f-419f-92e6-33e89ad4ab3d",
      "name": "Insert or update rows in a table1",
      "credentials": {
        "postgres": {
          "id": "SUEhuYJcerqDTg5F",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "59d0f20b-dc42-484e-8769-9687a316ba89",
              "name": "image_url",
              "value": "={{ $('Nano üçå1').item.json.choices[0].message.images[0].image_url.url }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        48,
        400
      ],
      "id": "0e3989d1-cd9b-4327-96b6-bece78c9396b",
      "name": "Edit Fields7"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        -2656,
        352
      ],
      "id": "1f598bbf-d4f4-4bd5-9df1-a82a563fac91",
      "name": "Merge2"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        400,
        400
      ],
      "id": "bcee5085-8f88-4a49-94cd-f5bf9fba1a9b",
      "name": "Merge3"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0560ebe5-ea49-4243-a7e4-bd8316f6d9b2",
              "name": "stored_url",
              "value": "={{ ($items(\"Load Image1\")[0]?.json?.image_url || '').trim() }}",
              "type": "string"
            },
            {
              "id": "0e88b765-147e-4082-a255-0641095cd37c",
              "name": "should_update",
              "value": "={{ !!$json.update_image }}",
              "type": "boolean"
            },
            {
              "id": "d4f3a39f-9060-4333-bee5-3277e635a6e9",
              "name": "has_stored_image",
              "value": "={{ (($items(\"Load Image1\")[0]?.json?.image_url || '').trim().length) > 0 }}",
              "type": "boolean"
            },
            {
              "id": "1bd772e9-a517-479d-acbb-8da635e8e0a0",
              "name": "should_generate",
              "value": "={{ !$json.should_update && !$json.has_stored_image }}",
              "type": "boolean"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2432,
        496
      ],
      "id": "9da9836a-68fd-45d6-bbb3-0ab54da164a7",
      "name": "Edit Fields8"
    },
    {
      "parameters": {
        "httpRequestMethod": "POST",
        "graphApiVersion": "v23.0",
        "node": "me",
        "edge": "photos",
        "options": {
          "queryParameters": {
            "parameter": [
              {
                "name": "url",
                "value": "={{$items('Make Public URL1').last().json.image_url}}"
              },
              {
                "name": "caption",
                "value": "={{$('Merge3').item.json.output.facebook_caption}}"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.facebookGraphApi",
      "typeVersion": 1,
      "position": [
        1296,
        176
      ],
      "id": "9c98f80a-9789-48a7-bbe2-1964a9267ec5",
      "name": "Facebook Graph API",
      "credentials": {
        "facebookGraphApi": {
          "id": "GAmKAoLEPsUCXnGi",
          "name": "Facebook"
        }
      }
    },
    {
      "parameters": {
        "fromEmail": "myatpwint25byte@gmail.com",
        "toEmail": "luphonemaw2004@gmail.com",
        "subject": "={{ $('Merge3').item.json.output.gmail_subject }}",
        "html": "={{ $('Merge3').item.json.output.gmail_html }}\n<img src=\"{{$items('Make Public URL1').last().json.image_url}}\" alt=\"Generated Image\" style=\"max-width:100%;border-radius:12px;\">\n",
        "options": {}
      },
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2.1,
      "position": [
        1296,
        560
      ],
      "id": "56304b8d-0036-41bb-8500-d7fc6028f6e0",
      "name": "Send email",
      "webhookId": "2a2b4a7b-9047-469f-8cfd-93b49e330b3b",
      "credentials": {
        "smtp": {
          "id": "DP9vbjxGxfh5XwbG",
          "name": "SMTP account"
        }
      }
    },
    {
      "parameters": {
        "httpRequestMethod": "POST",
        "graphApiVersion": "v23.0",
        "node": "=17841476505328383",
        "edge": "media",
        "options": {
          "queryParameters": {
            "parameter": [
              {
                "name": "image_url",
                "value": "={{ \n  $items(\"Make Public URL1\").last().json.image_url \n  || $items(\"Edit Fields6\").last().json.image_url \n  || $items(\"Load Image1\")[0].json.image_url \n}}"
              },
              {
                "name": "caption",
                "value": "={{ $('Merge3').item.json.output.instagram_caption }}"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.facebookGraphApi",
      "typeVersion": 1,
      "position": [
        1296,
        368
      ],
      "id": "4e3d2c73-20f3-41d6-9462-13bac8bce35f",
      "name": "container",
      "credentials": {
        "facebookGraphApi": {
          "id": "ve6pION0c2UJn9sM",
          "name": "Instagram"
        }
      }
    },
    {
      "parameters": {
        "httpRequestMethod": "POST",
        "graphApiVersion": "v23.0",
        "node": "17841476505328383",
        "edge": "media_publish",
        "options": {
          "queryParameters": {
            "parameter": [
              {
                "name": "creation_id",
                "value": "={{ $json.id }}"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.facebookGraphApi",
      "typeVersion": 1,
      "position": [
        1520,
        368
      ],
      "id": "1dbe7e12-f439-40c2-8305-019d95e77c4f",
      "name": "Facebook Graph API6",
      "credentials": {
        "facebookGraphApi": {
          "id": "ve6pION0c2UJn9sM",
          "name": "Instagram"
        }
      }
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Grab the OpenRouter response\nconst resp = $('Nano üçå1').item.json;\n\n// Try a couple of possible shapes OpenRouter might return\nconst dataUrl =\n  resp?.choices?.[0]?.message?.images?.[0]?.image_url?.url ||\n  (resp?.choices?.[0]?.message?.content || [])\n    .find(c => c?.type === 'output_image')?.image_url?.url ||\n  '';\n\n// Validate\nif (!dataUrl) {\n  throw new Error('No image data URL produced by the model.');\n}\n\nconst m = dataUrl.match(/^data:([^;]+);base64,(.+)$/s);\nif (!m) {\n  throw new Error('Expected \"data:*;base64,...\" but got: ' + dataUrl.slice(0, 60) + '...');\n}\n\n// Return a SINGLE object\nreturn {\n  json: {\n    mime: m[1],\n    base64: m[2],\n  },\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1408,
        400
      ],
      "id": "d4c5dbf8-b3a8-42da-b944-45b2ffbdea21",
      "name": "Parse DataURL1"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "binaryPropertyName": "image",
        "options": {
          "fileName": "ai-image.png",
          "mimeType": "={{$json.mime || 'image/png'}}"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -1184,
        400
      ],
      "id": "61f41f5e-888d-41b2-9460-04f9ac65e059",
      "name": "Convert to File1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://bsmbqekevilajlapldan.supabase.co/storage/v1/object/{{$json.bucket}}/{{ encodeURIComponent($json.object_path) }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJzbWJxZWtldmlsYWpsYXBsZGFuIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1NTc4NTY4NywiZXhwIjoyMDcxMzYxNjg3fQ.jiSCAbOxUtjH8Bcjr6NZoMrNwXMNSat_5DPhoRH_aR4"
            },
            {
              "name": "x-upsert",
              "value": "true"
            }
          ]
        },
        "sendBody": true,
        "contentType": "binaryData",
        "inputDataFieldName": "image",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -736,
        400
      ],
      "id": "29ab1507-6d84-424d-8f64-23ae68a24d4e",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "68d9eae5-3b6e-46c0-9a5a-a1ddaaa7b919",
              "name": "bucket",
              "value": "public-images",
              "type": "string"
            },
            {
              "id": "025b138f-0593-43bb-8c1c-33ae0677578f",
              "name": "object_path",
              "value": "={{ ($json.content_id || 'untitled') + '/' + $now.toMillis() + '.png' }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -960,
        400
      ],
      "id": "83e49cc5-4fa7-404a-8fd8-92dbdebb203c",
      "name": "Edit Fields9"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "2ba424e2-4e58-40ca-86c6-da1f7f1691a2",
              "name": "image_url",
              "value": "=https://bsmbqekevilajlapldan.supabase.co/storage/v1/object/public/{{ $json.Key }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -512,
        400
      ],
      "id": "d5cb7785-eabe-4e4f-867a-4d16c60ea26a",
      "name": "Make Public URL1"
    },
    {
      "parameters": {
        "operation": "sendPhoto",
        "chatId": "@myatpwintbook",
        "file": "={{$items('Make Public URL1').last().json.image_url}}",
        "additionalFields": {
          "caption": "={{ $('Merge3').item.json.output.telegram_message }}"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1296,
        752
      ],
      "id": "1cbb43d6-d394-4071-bc7b-f9cadd4a28ee",
      "name": "Send a photo message1",
      "webhookId": "9b0369e6-bc65-4e73-ae50-aca1d32a0654",
      "credentials": {
        "telegramApi": {
          "id": "l4v8KTqSey9sJsc5",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "a86eb597-4e3d-4e7e-a7d4-27c475736c1d",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        -3552,
        432
      ],
      "id": "fbb24bbc-4a22-4744-8280-cb64360c075a",
      "name": "Webhook1",
      "webhookId": "a86eb597-4e3d-4e7e-a7d4-27c475736c1d"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "bcb33a80-c255-43ff-aea4-8d82f1fa010b",
              "name": "decision",
              "value": "={{ $json.data['What do you want to do?'] }}",
              "type": "string"
            },
            {
              "id": "edb23d37-aa9e-4713-a13a-2db571a45456",
              "name": "Feedback",
              "value": "={{ $json.data.Feedback }}",
              "type": "string"
            },
            {
              "id": "f96b327f-733c-4fac-aa36-5f70b8579abf",
              "name": "update_image",
              "value": "={{ $json.data['Change image too'] }}",
              "type": "string"
            },
            {
              "id": "e44bcf0f-2593-4e00-a7e2-dfc66e9a1653",
              "name": "content_id",
              "value": "={{ $json.data.content_id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        848,
        400
      ],
      "id": "6cd4cde1-a279-4514-b481-9293cc7dbe39",
      "name": "Normalize Form Result"
    },
    {
      "parameters": {
        "options": {
          "temperature": 0.1
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -64,
        224
      ],
      "id": "c603d6b0-c0d8-435c-ad86-a5054637a4d1",
      "name": "2.5 Flash1",
      "credentials": {
        "googlePalmApi": {
          "id": "tS3ebT2U0LkjkZOk",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    }
  ],
  "connections": {
    "Nano üçå1": {
      "main": [
        [
          {
            "node": "Parse DataURL1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a message1": {
      "main": [
        [
          {
            "node": "Normalize Form Result",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Send email",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send a photo message1",
            "type": "main",
            "index": 0
          },
          {
            "node": "container",
            "type": "main",
            "index": 0
          },
          {
            "node": "Facebook Graph API",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Edit Fields5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Image Prompt Generator1": {
      "main": [
        [
          {
            "node": "Nano üçå1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Structured Output Parser1": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory1": {
      "ai_memory": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields5": {
      "main": [
        [
          {
            "node": "Load Image1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Load Image1": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Should Update Image?1": {
      "main": [
        [
          {
            "node": "Image Prompt Generator1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Image Prompt Generator1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields6": {
      "main": [
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert or update rows in a table1": {
      "main": [
        [
          {
            "node": "Edit Fields7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields7": {
      "main": [
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge2": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Edit Fields8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge3": {
      "main": [
        [
          {
            "node": "Send a message1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields8": {
      "main": [
        [
          {
            "node": "Should Update Image?1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "container": {
      "main": [
        [
          {
            "node": "Facebook Graph API6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse DataURL1": {
      "main": [
        [
          {
            "node": "Convert to File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File1": {
      "main": [
        [
          {
            "node": "Edit Fields9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Make Public URL1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields9": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Make Public URL1": {
      "main": [
        [
          {
            "node": "Insert or update rows in a table1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook1": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Normalize Form Result": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "2.5 Flash1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Image Prompt Generator1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "83fb673cecd2d8bbd687a186041aea4ad734085b400b563be6237d0cd75886b0"
  }
}